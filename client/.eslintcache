[{"C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\index.js":"1","C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\App.js":"3","C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\components\\Navbar.js":"4","C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\components\\screens\\Profile.js":"5","C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\components\\screens\\Home.js":"6","C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\components\\screens\\Login.js":"7","C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\components\\reducer\\UserReducer.js":"8","C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\components\\screens\\CreatePost.js":"9","C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\components\\screens\\Signup.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1442,"mtime":1612983011287,"results":"14","hashOfConfig":"12"},{"size":1353,"mtime":1612983336527,"results":"15","hashOfConfig":"12"},{"size":1692,"mtime":1612983532135,"results":"16","hashOfConfig":"12"},{"size":3089,"mtime":1612994332209,"results":"17","hashOfConfig":"12"},{"size":2273,"mtime":1612983878410,"results":"18","hashOfConfig":"12"},{"size":249,"mtime":1612982481050,"results":"19","hashOfConfig":"12"},{"size":3048,"mtime":1612954909443,"results":"20","hashOfConfig":"12"},{"size":2312,"mtime":1612982536617,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"z60p8h",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},"C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\index.js",[],["49","50"],"C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\App.js",["51","52"],"import NavBar from \"./components/Navbar\";\nimport { BrowserRouter, Route, Switch, useHistory } from 'react-router-dom';\nimport Home from \"./components/screens/Home\";\nimport Login from \"./components/screens/Login\";\nimport Signup from \"./components/screens/Signup\";\nimport Profile from \"./components/screens/Profile\";\nimport CreatePost from \"./components/screens/CreatePost\";\nimport { useEffect, createContext, useReducer, useContext } from 'react';\n\nimport { initialState, reducer } from './components/reducer/UserReducer';\nexport const userContext = createContext();\n\nconst Routing = () => {\n  const history = useHistory();\n  const {state,dispatch} =useContext(userContext)\n  useEffect(()=>{\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user) {\n      dispatch({type:\"USER\",payload:user})\n    }else{\n      history.push('/login')\n    }\n  \n  },[])\n\n  return (\n    <Switch>\n      <Route exact path='/'><Home /></Route>\n      <Route path='/login'><Login /></Route>\n      <Route path='/signup'><Signup /></Route>\n      <Route path='/profile'><Profile /></Route>\n      <Route path='/createpost'><CreatePost /></Route>\n    </Switch>\n  );\n\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <userContext.Provider value={{ state, dispatch }}>\n      <BrowserRouter>\n        <NavBar />\n        <Routing />\n      </BrowserRouter>\n    </userContext.Provider>\n\n  );\n}\n\nexport default App;\n","C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\components\\Navbar.js",["53","54"],"import react, { useContext } from 'react';\r\nimport '../App.css';\r\nimport { Link ,useHistory} from 'react-router-dom';\r\nimport { userContext } from '../App';\r\nimport userEvent from '@testing-library/user-event';\r\n\r\n\r\nconst NavBar = () => {\r\n    const { state, dispatch } = useContext(userContext);\r\n    const history =useHistory();\r\n\r\n    const renderList = () => {\r\n        \r\n        if (state) {\r\n            return [\r\n                <li><Link to=\"/profile\" >Profile</Link></li>,\r\n                <li><Link to=\"/createpost\" >Create Post</Link></li>,\r\n                <li onClick={()=>{\r\n                    localStorage.clear()\r\n                    dispatch({type:\"CLEAR\"})\r\n                    history.push('/login')\r\n                }}>Signout</li>\r\n            ]\r\n        }\r\n        else {\r\n            return [\r\n                <li><Link to=\"/login\" >Login</Link></li>,\r\n                <li><Link to=\"/signup\" >Signup</Link></li>\r\n            ]\r\n        }\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper orange\" >\r\n                <Link to={state?\"/\":\"/login\"} className=\"brand-logo left\">InstaMeme</Link>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    {renderList()}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n\r\n}\r\n\r\nexport default NavBar;","C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\components\\screens\\Profile.js",["55","56","57"],"import react, { useEffect, useState } from 'react';\r\n\r\nconst Profile= ()=>{\r\n    const [data, SetData] = useState([]);\r\n    useEffect(() => {\r\n\r\n        fetch(\"/mypost\", {\r\n            method: 'GET',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem('jwt'),\r\n            },\r\n\r\n        }).then(res => res.json()\r\n            .then(res => {\r\n                if (res.success) {\r\n                    SetData(res.mypost)\r\n                }\r\n\r\n            }));\r\n            \r\n\r\n    }, [])\r\n    return(\r\n        <div className='profile-parent-div'>\r\n            <div style={{display:'flex',justifyContent:'space-around',margin:'18px 0px',borderBottom:'1px solid black'}}>\r\n                <div>\r\n                    <img className='profile-image' src=\"/images/profile-image.png\"/>\r\n                </div>\r\n                <div>\r\n                    <h4>{JSON.parse(localStorage.getItem('user')).name}</h4>\r\n                    <div style={{display:'flex',justifyContent:'space-between',width: '110%'}}>\r\n                        <h6>{data.length} posts</h6>\r\n                        <h6>0 followers</h6>\r\n                        <h6>0 followings</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className='gallery'>\r\n            {\r\n                data.map(item => {\r\n\r\n                    return (\r\n\r\n                        <img className='items' src={item.url} key={item._id} alt={item.title} key={item._id} />\r\n\r\n                    );\r\n\r\n                })\r\n            }\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Profile;","C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\components\\screens\\Home.js",["58","59"],"C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\components\\screens\\Login.js",["60","61","62","63","64","65"],"import react from 'react';\r\nimport '../../App.css';\r\nimport {useState,useContext}from 'react';\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n\r\nimport { userContext } from '../../App';\r\n\r\nconst Login = () => {\r\n\r\n    const {state,dispatch} =useContext(userContext);\r\n\r\n    const history = useHistory();\r\n    const mail_validatorconst= /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const [email,setEmail]=useState(\"\");\r\n    const [password,setPassword]=useState(\"\");\r\n    \r\n\r\n    const LoginData = ()=>{\r\n\r\n        if (!mail_validatorconst.test(email)){\r\n            M.toast({html:\"Invaid Email type\"});\r\n            return\r\n        }      \r\n\r\n        fetch(\"/signin\",{\r\n            method:'POST',\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                email,\r\n                password\r\n            })\r\n\r\n        }).then(res=>res.json()\r\n        .then(data=>{\r\n            if (data.success) {\r\n                localStorage.setItem('jwt',data.token);\r\n                localStorage.setItem('user',JSON.stringify(data.user));\r\n                dispatch({type:\"USER\",payload:data.user})\r\n                M.toast({html:data.message,classes:'green'});\r\n                history.push('/');\r\n            }\r\n            else{\r\n                M.toast({html:data.message,classes:'red'});\r\n            }\r\n            \r\n        }));\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"my-card\">\r\n            <div className=\"card auth-card\">\r\n                <h3>Login</h3>\r\n                <input className=\"input-field\" type=\"text\" placeholder=\"Email\" value={email} onChange={(e)=>setEmail(e.target.value)} />\r\n                <input className=\"input-field\" type=\"password\" placeholder=\"Password\" value={password} onChange={(e)=>setPassword(e.target.value)} />\r\n                <button className=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={()=>LoginData()}>Login</button>\r\n\r\n                <h6><Link to=\"/signup\">Don't have account ?</Link></h6>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Login;","C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\components\\reducer\\UserReducer.js",[],"C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\components\\screens\\CreatePost.js",["66","67"],"import { useState,useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n\r\nconst CreatePost = () => {\r\n    const history = useHistory();\r\n    const [title, setTitle] = useState(\"\");\r\n    const [content, setContent] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n    const [url, setUrl] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        if (url) {\r\n            fetch(\"/createpost\", {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"Authorization\": \"Bearer \" + localStorage.getItem('jwt'),\r\n                },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    body: content,\r\n                    url\r\n                })\r\n    \r\n            }).then(res => res.json()\r\n                .then(data => {\r\n                    if (data.success) {\r\n                        M.toast({ html: data.message, classes: 'green' });\r\n                        history.push('/');\r\n                    }\r\n                    else {\r\n                        M.toast({ html: data.message, classes: 'red' });\r\n                    }\r\n    \r\n                })).catch(error => {\r\n                    console.log(error);\r\n                    M.toast({ html: error.message, classes: 'red' });\r\n                });\r\n        }\r\n\r\n    },[url]);\r\n\r\n    const PostData = () => {\r\n        const formData = new FormData();\r\n\r\n        formData.append('file', image);\r\n        formData.append('upload_preset', 'insta-meme');\r\n        formData.append('cloud_name', 'developerdesk9');\r\n\r\n        fetch('https://api.cloudinary.com/v1_1/developerdesk9/image/upload/', {\r\n            method: 'PUT',\r\n            body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            console.log('Success:', result);\r\n            setUrl(result.url);\r\n        })\r\n        .catch(error => {\r\n            console.error('Error:', error);\r\n        });\r\n\r\n\r\n        \r\n\r\n    }\r\n    return (\r\n        <div className='card parent-create-post'>\r\n            <h5>Create new post</h5>\r\n            <input text='text' placeholder='Title' value={title} onChange={(e) => setTitle(e.target.value)} />\r\n            <input text='text' placeholder='Content' value={content} onChange={(e) => setContent(e.target.value)} />\r\n\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #1e88e5 blue darken-1\">\r\n                    <span>Select file</span>\r\n                    <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate input-field\" type=\"text\" />\r\n                </div>\r\n            </div>\r\n\r\n            <button className=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => PostData()}>Upload</button>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default CreatePost;","C:\\Users\\Saurabh Pandey\\Desktop\\Projects Node.js\\Instameme\\client\\src\\components\\screens\\Signup.js",["68","69","70","71"],"import {useState}from 'react';\r\nimport { Link,useHistory } from 'react-router-dom';\r\nimport M from 'materialize-css';\r\n\r\n\r\n\r\n\r\nconst Signup = () => {\r\n    const mail_validatorconst= /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    const [name,setName]=useState(\"\");\r\n    const [username,setUserName]=useState(\"\");\r\n    const [email,setEmail]=useState(\"\");\r\n    const [password,setPassword]=useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const PostData = ()=>{\r\n\r\n        if (!mail_validatorconst.test(email)){\r\n            M.toast({html:\"Invaid Email type\"});\r\n            return\r\n        }      \r\n\r\n        fetch(\"/signup\",{\r\n            method:'POST',\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n            },\r\n            body:JSON.stringify({\r\n                name,\r\n                email,\r\n                password\r\n            })\r\n\r\n        }).then(res=>res.json()\r\n        .then(data=>{\r\n            if (data.success) {\r\n                M.toast({html:data.message,classes:'green'});\r\n                history.push('/login');\r\n            }\r\n            else{\r\n                M.toast({html:data.message,classes:'red'});\r\n            }\r\n            \r\n        }));\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"my-card\">\r\n            <div className=\"card auth-card\">\r\n                <h3>Signup</h3>\r\n                <input className=\"input-field\" type=\"text\" placeholder=\"Name\" value={name} onChange={(e)=>setName(e.target.value)} />\r\n                <input className=\"input-field\" type=\"text\" placeholder=\"Username\" value={username} onChange={(e)=>setUserName(e.target.value)}/>\r\n                <input className=\"input-field\" type=\"email\" placeholder=\"Email\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\r\n                <input className=\"input-field\" type=\"password\" placeholder=\"Password\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\r\n                <button className=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={()=>PostData()}>Sign up</button>\r\n                <h6><Link to=\"/login\">Already have account ?</Link></h6>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Signup;",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":15,"column":10,"nodeType":"78","messageId":"79","endLine":15,"endColumn":15},{"ruleId":"80","severity":1,"message":"81","line":24,"column":5,"nodeType":"82","endLine":24,"endColumn":7,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"84","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":13},{"ruleId":"76","severity":1,"message":"85","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":17},{"ruleId":"76","severity":1,"message":"84","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"87","line":28,"column":21,"nodeType":"88","endLine":28,"endColumn":85},{"ruleId":"89","severity":1,"message":"90","line":47,"column":95,"nodeType":"91","endLine":47,"endColumn":109},{"ruleId":"76","severity":1,"message":"84","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":13},{"ruleId":"86","severity":1,"message":"87","line":78,"column":33,"nodeType":"88","endLine":78,"endColumn":55},{"ruleId":"76","severity":1,"message":"84","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":13},{"ruleId":"76","severity":1,"message":"77","line":11,"column":12,"nodeType":"78","messageId":"79","endLine":11,"endColumn":17},{"ruleId":"92","severity":1,"message":"93","line":14,"column":54,"nodeType":"94","messageId":"95","endLine":14,"endColumn":55,"suggestions":"96"},{"ruleId":"92","severity":1,"message":"93","line":14,"column":79,"nodeType":"94","messageId":"95","endLine":14,"endColumn":80,"suggestions":"97"},{"ruleId":"92","severity":1,"message":"93","line":14,"column":88,"nodeType":"94","messageId":"95","endLine":14,"endColumn":89,"suggestions":"98"},{"ruleId":"92","severity":1,"message":"93","line":14,"column":92,"nodeType":"94","messageId":"95","endLine":14,"endColumn":93,"suggestions":"99"},{"ruleId":"76","severity":1,"message":"100","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":14},{"ruleId":"80","severity":1,"message":"101","line":42,"column":7,"nodeType":"82","endLine":42,"endColumn":12,"suggestions":"102"},{"ruleId":"92","severity":1,"message":"93","line":9,"column":54,"nodeType":"94","messageId":"95","endLine":9,"endColumn":55,"suggestions":"103"},{"ruleId":"92","severity":1,"message":"93","line":9,"column":79,"nodeType":"94","messageId":"95","endLine":9,"endColumn":80,"suggestions":"104"},{"ruleId":"92","severity":1,"message":"93","line":9,"column":88,"nodeType":"94","messageId":"95","endLine":9,"endColumn":89,"suggestions":"105"},{"ruleId":"92","severity":1,"message":"93","line":9,"column":92,"nodeType":"94","messageId":"95","endLine":9,"endColumn":93,"suggestions":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["109"],"'react' is defined but never used.","'userEvent' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["110","111"],["112","113"],["114","115"],["116","117"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'content', 'history', and 'title'. Either include them or remove the dependency array.",["118"],["119","120"],["121","122"],["123","124"],["125","126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"messageId":"129","fix":"130","desc":"131"},{"messageId":"132","fix":"133","desc":"134"},{"messageId":"129","fix":"135","desc":"131"},{"messageId":"132","fix":"136","desc":"134"},{"messageId":"129","fix":"137","desc":"131"},{"messageId":"132","fix":"138","desc":"134"},{"messageId":"129","fix":"139","desc":"131"},{"messageId":"132","fix":"140","desc":"134"},{"desc":"141","fix":"142"},{"messageId":"129","fix":"143","desc":"131"},{"messageId":"132","fix":"144","desc":"134"},{"messageId":"129","fix":"145","desc":"131"},{"messageId":"132","fix":"146","desc":"134"},{"messageId":"129","fix":"147","desc":"131"},{"messageId":"132","fix":"148","desc":"134"},{"messageId":"129","fix":"149","desc":"131"},{"messageId":"132","fix":"150","desc":"134"},"Update the dependencies array to be: [dispatch, history]",{"range":"151","text":"152"},"removeEscape",{"range":"153","text":"154"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"155","text":"156"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"157","text":"154"},{"range":"158","text":"156"},{"range":"159","text":"154"},{"range":"160","text":"156"},{"range":"161","text":"154"},{"range":"162","text":"156"},"Update the dependencies array to be: [content, history, title, url]",{"range":"163","text":"164"},{"range":"165","text":"154"},{"range":"166","text":"156"},{"range":"167","text":"154"},{"range":"168","text":"156"},{"range":"169","text":"154"},{"range":"170","text":"156"},{"range":"171","text":"154"},{"range":"172","text":"156"},[862,864],"[dispatch, history]",[398,399],"",[398,398],"\\",[423,424],[423,423],[432,433],[432,432],[436,437],[436,436],[1406,1411],"[content, history, title, url]",[204,205],[204,204],[229,230],[229,229],[238,239],[238,238],[242,243],[242,242]]